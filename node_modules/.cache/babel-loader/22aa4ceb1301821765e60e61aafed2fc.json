{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React JS\\\\React-Complete Guide (Udemy)\\\\REACT-COMPLETE-GUIDE\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  //multiple state approach\n  const [enteredTitle, setenteredTitle] = useState(\"\");\n  const [enteredAmount, setenteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); //----Single state appraoch\n\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  }); */\n\n  const titleChangeHandler = event => {\n    //multiple state approach\n    setenteredTitle(event.target.value); //----Single state appraoch\n\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredTitle: event.target.value,\r\n    }); */\n    //----User of prevState will guarntee that we are recieving and updating correct state.\n\n    /* setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    }); */\n  };\n\n  const amountChangeHandler = event => {\n    setenteredAmount(event.target.value);\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredAmount: event.target.value,\r\n    }); */\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredDate: event.target.value,\r\n    }); */\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setenteredTitle(\"\");\n    setenteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const cancelHandler = () => {\n    console.log(\"Cancelled!\");\n    showHideFormContent('false');\n  };\n\n  let expressFormContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense__actions\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 28\n  }, this);\n\n  const showHideFormContent = showContent => {\n    if (showContent == \"true\") {\n      expressFormContent = /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        onCancel: cancelHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: enteredTitle,\n              onChange: titleChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0.01\",\n              step: \"0.01\",\n              value: enteredAmount,\n              onChange: amountChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-expense__control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              min: \"2019-01-01\",\n              max: \"2022-12-31\",\n              value: enteredDate,\n              onChange: dateChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            onClick: cancelHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 35\n      }, this);\n    } else {\n      expressFormContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }, this);\n    }\n  };\n\n  return {\n    expressFormContent\n  } //<expressFormContent></expressFormContent>\n  ;\n};\n\n_s(ExpenseForm, \"K1XNi9cSg+KzQTHxzu6fLkOPNz4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/Learning/React JS/React-Complete Guide (Udemy)/REACT-COMPLETE-GUIDE/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setenteredTitle","enteredAmount","setenteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","cancelHandler","console","log","showHideFormContent","expressFormContent","showContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //multiple state approach\r\n  const [enteredTitle, setenteredTitle] = useState(\"\");\r\n  const [enteredAmount, setenteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //----Single state appraoch\r\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  }); */\r\n\r\n  const titleChangeHandler = (event) => {\r\n    //multiple state approach\r\n    setenteredTitle(event.target.value);\r\n\r\n    //----Single state appraoch\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredTitle: event.target.value,\r\n    }); */\r\n\r\n    //----User of prevState will guarntee that we are recieving and updating correct state.\r\n    /* setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    }); */\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setenteredAmount(event.target.value);\r\n\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredAmount: event.target.value,\r\n    }); */\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n    /* setUserInput({\r\n      ...userInput,\r\n      enteredDate: event.target.value,\r\n    }); */\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setenteredTitle(\"\");\r\n    setenteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  const cancelHandler =()=>{\r\n    console.log(\"Cancelled!\")\r\n    showHideFormContent('false');\r\n  };\r\n  let expressFormContent = <div className=\"new-expense__actions\"><button type=\"submit\">Add New Expense</button></div>\r\n  const showHideFormContent=(showContent)=>{\r\n       if (showContent==\"true\"){\r\n             expressFormContent= (<form onSubmit={submitHandler} onCancel={cancelHandler}>\r\n             <div className=\"new-expense__controls\">\r\n               <div className=\"new-expense__control\">\r\n                 <label>Title</label>\r\n                 <input\r\n                   type=\"text\"\r\n                   value={enteredTitle}\r\n                   onChange={titleChangeHandler}\r\n                 />\r\n               </div>\r\n               <div className=\"new-expense__control\">\r\n                 <label>Amount</label>\r\n                 <input\r\n                   type=\"number\"\r\n                   min=\"0.01\"\r\n                   step=\"0.01\"\r\n                   value={enteredAmount}\r\n                   onChange={amountChangeHandler}\r\n                 />\r\n               </div>\r\n               <div className=\"new-expense__control\">\r\n                 <label>Date</label>\r\n                 <input\r\n                   type=\"date\"\r\n                   min=\"2019-01-01\"\r\n                   max=\"2022-12-31\"\r\n                   value={enteredDate}\r\n                   onChange={dateChangeHandler}\r\n                 />\r\n               </div>\r\n             </div>\r\n             <div className=\"new-expense__actions\">\r\n             <button type=\"reset\" onClick={cancelHandler}>Cancel</button>\r\n             <button type=\"submit\">Add Expense</button>\r\n             </div>\r\n       \r\n           </form>);\r\n       }\r\n       else{\r\n         expressFormContent = <div className=\"new-expense__actions\"><button type=\"submit\">Add New Expense</button></div>\r\n       }\r\n  };\r\n \r\n  return (\r\n   {expressFormContent}\r\n  //<expressFormContent></expressFormContent>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}